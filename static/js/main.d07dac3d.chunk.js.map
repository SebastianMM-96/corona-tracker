{"version":3,"sources":["App.module.css","components/Cards/Cards.module.css","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","components/Cards/Cards.jsx","App.js","index.js","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","img/ico.png"],"names":["module","exports","url","fetchData","country","a","changeableUrl","axios","get","data","confirmed","recovered","deaths","lastUpdate","fetchDailyData","map","date","reportDate","total","fetchCountries","countries","name","Chart","useState","dailyData","setDailyData","useEffect","initialDailyData","fetchMyAPI","barChart","labels","datasets","label","backgroundColor","value","options","legend","display","title","text","lineChart","borderColor","fill","className","styles","container","Countries","handleCountryChange","setCountries","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","Cards","styleMedia","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variante","start","end","duration","separator","Date","toDateString","variant","App","state","setState","this","logo","src","logoImg","alt","menu","infoAPI","href","page","details","CountryPicker","developer","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d07dac3d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__33847\",\"logo\":\"App_logo__3ivj9\",\"menu\":\"App_menu__3f5Wl\",\"page\":\"App_page__29PeY\",\"details\":\"App_details__3kGCo\",\"infoAPI\":\"App_infoAPI__1ZfgJ\",\"developer\":\"App_developer__23R6w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__GavBh\",\"card\":\"Cards_card__C8YVm\",\"infected\":\"Cards_infected__35Lhj\",\"recovered\":\"Cards_recovered__2dKcb\",\"deaths\":\"Cards_deaths___2-QN\"};","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n  let changeableUrl = url;\r\n\r\n  if (country) {\r\n    changeableUrl = `${url}/countries/${country}`;\r\n  }\r\n\r\n  try {\r\n    const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\r\n\r\n    return { confirmed, recovered, deaths, lastUpdate };\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);\r\n\r\n    return data.map(({ confirmed, deaths, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const { data: { countries } } = await axios.get(`${url}/countries`);\r\n\r\n    return countries.map((country) => country.name);\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport { fetchDailyData } from '../../api';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n  const [dailyData, setDailyData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchMyAPI = async () => {\r\n      const initialDailyData = await fetchDailyData();\r\n\r\n      setDailyData(initialDailyData);\r\n    };\r\n\r\n    fetchMyAPI();\r\n  }, []);\r\n\r\n  const barChart = (\r\n    confirmed ? (\r\n      <Bar\r\n        data={{\r\n          labels: ['Infetados', 'Recuperados', 'Muertos'],\r\n          datasets: [\r\n            {\r\n              label: 'Personas',\r\n              backgroundColor: [\r\n                  'rgba(255, 255, 0, 0.5)', \r\n                  'rgba(105, 255, 0, 0.5)', \r\n                  'rgba(255, 8, 0, 0.5)'],\r\n              data: [confirmed.value, recovered.value, deaths.value],\r\n            },\r\n          ],\r\n        }}\r\n        options={{\r\n          legend: { display: false },\r\n          title: { display: true, text: `Estado actual en ${country}` },\r\n        }}\r\n      />\r\n    ) : null\r\n  );\r\n\r\n  const lineChart = (\r\n    dailyData[0] ? (\r\n      <Line\r\n        data={{\r\n          labels: dailyData.map(({ date }) => date),\r\n          datasets: [{\r\n            data: dailyData.map((data) => data.confirmed),\r\n            label: 'Infectados',\r\n            borderColor: 'rgb(255,246,0)',\r\n            backgroundColor: 'rgba(255,239,0, 0.5)',\r\n            fill: true,\r\n          }, {\r\n            data: dailyData.map((data) => data.deaths),\r\n            label: 'Muertos',\r\n            borderColor: 'rgb(204,0,0)',\r\n            backgroundColor: 'rgba(255,8,0, 0.5)',\r\n            fill: true,\r\n          },\r\n          ],\r\n        }}\r\n      />\r\n    ) : null\r\n  );\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      {country ? barChart : lineChart}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\n\r\nimport { fetchCountries } from '../../api';\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nconst Countries = ({ handleCountryChange }) => {\r\n  const [countries, setCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setCountries(await fetchCountries());\r\n    };\r\n\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n        <option value=\"\">Global</option>\r\n        {countries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default Countries;","import React from 'react';\r\nimport {Card, CardContent, Typography, Grid} from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nimport styles from './Cards.module.css';\r\n\r\n\r\nconst Cards = ( {data: {confirmed, recovered, deaths, lastUpdate }}) => {\r\n\r\n    if(!confirmed){\r\n        return 'Loading...';\r\n    }\r\n\r\n    return(\r\n        <div className={styleMedia.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Infectados</Typography>\r\n                        <Typography variante=\"h5\">\r\n                            <CountUp\r\n                                start={0}\r\n                                end={confirmed.value}\r\n                                duration={1.5}\r\n                                separator=\",\"\r\n                            />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">\r\n                            {new Date(lastUpdate).toDateString()}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\">Casos activos de COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Recuperados</Typography>\r\n                        <Typography variante=\"h5\">\r\n                        <CountUp\r\n                                start={0}\r\n                                end={recovered.value}\r\n                                duration={1.5}\r\n                                separator=\",\"\r\n                            />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">\r\n                            {new Date(lastUpdate).toDateString()}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\">Número de recuperados del COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Muertes</Typography>\r\n                        <Typography variante=\"h5\">\r\n                        <CountUp\r\n                                start={0}\r\n                                end={deaths.value}\r\n                                duration={1.5}\r\n                                separator=\",\"\r\n                            />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">\r\n                            {new Date(lastUpdate).toDateString()}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\">Número de muertes causadas por COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cards;","import React from 'react';\r\n\r\nimport { Cards, CountryPicker, Chart } from './components';\r\nimport { fetchData } from './api/';\r\nimport styles from './App.module.css';\r\n\r\nimport logoImg from './img/ico.png';\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    data: {},\r\n    country: '',\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const data = await fetchData();\r\n\r\n    this.setState({ data });\r\n  }\r\n\r\n  handleCountryChange = async (country) => {\r\n    const data = await fetchData(country);\r\n\r\n    this.setState({ data, country: country });\r\n  }\r\n\r\n  render() {\r\n    const { data, country } = this.state;\r\n\r\n    return (\r\n      <div className={styles.container}>\r\n\r\n        <nav>\r\n          <img className={styles.logo} src={logoImg} alt=\"Logo\"/>\r\n          <div className={styles.menu}>\r\n            <div className={styles.infoAPI}>\r\n              <h3>API developed by:</h3>\r\n              <a href=\"https://github.com/mathdroid/covid-19-api\" target=\"blank\">mathdroid</a>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n\r\n        <section className={styles.page}>\r\n          <div className={styles.details}>\r\n            <h1>Corona-Tracker</h1>\r\n            <h2>Track & Visualization</h2>\r\n          </div>\r\n        </section>\r\n\r\n        <Cards data={data} />\r\n        <br/>\r\n        <br/>\r\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n        <Chart data={data} country={country} />\r\n\r\n        <footer>\r\n          <div className={styles.developer}>\r\n            <p>Copyright © 2020 All Rights Reserved by <a href=\"https://github.com/SebastianMM-96\" target=\"blank\">Sebastian Marroquín</a></p>\r\n          </div>\r\n        </footer>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__3PHSn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2mm3q\"};","module.exports = __webpack_public_path__ + \"static/media/ico.20e98364.png\";"],"sourceRoot":""}